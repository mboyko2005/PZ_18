// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PZ_18.Data;

#nullable disable

namespace PZ_18.Migrations
{
    [DbContext(typeof(CoreContext))]
    partial class CoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PZ_18.Models.Comment", b =>
                {
                    b.Property<int>("CommentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentID"));

                    b.Property<int?>("MasterID")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RequestID")
                        .HasColumnType("int");

                    b.HasKey("CommentID");

                    b.HasIndex("MasterID");

                    b.HasIndex("RequestID");

                    b.ToTable("Comments", (string)null);
                });

            modelBuilder.Entity("PZ_18.Models.HomeTechType", b =>
                {
                    b.Property<int>("TechTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TechTypeID"));

                    b.Property<string>("TechTypeName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("TechTypeID");

                    b.ToTable("HomeTechTypes", (string)null);
                });

            modelBuilder.Entity("PZ_18.Models.RepairPart", b =>
                {
                    b.Property<int>("PartID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PartID"));

                    b.Property<string>("PartName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("RequestID")
                        .HasColumnType("int");

                    b.HasKey("PartID");

                    b.HasIndex("RequestID");

                    b.ToTable("RepairParts", (string)null);
                });

            modelBuilder.Entity("PZ_18.Models.Request", b =>
                {
                    b.Property<int>("RequestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestID"));

                    b.Property<string>("ClientFIO")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ClientID")
                        .HasColumnType("int");

                    b.Property<string>("ClientPhone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("CompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HomeTechModel")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("MasterID")
                        .HasColumnType("int");

                    b.Property<string>("ProblemDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TechTypeID")
                        .HasColumnType("int");

                    b.HasKey("RequestID");

                    b.HasIndex("ClientID");

                    b.HasIndex("MasterID");

                    b.HasIndex("TechTypeID");

                    b.ToTable("Requests", (string)null);
                });

            modelBuilder.Entity("PZ_18.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("FIO")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("TypeID")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.HasIndex("TypeID");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("PZ_18.Models.UserType", b =>
                {
                    b.Property<int>("TypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeID"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TypeID");

                    b.ToTable("UserTypes", (string)null);
                });

            modelBuilder.Entity("PZ_18.Models.Comment", b =>
                {
                    b.HasOne("PZ_18.Models.User", "Master")
                        .WithMany()
                        .HasForeignKey("MasterID");

                    b.HasOne("PZ_18.Models.Request", "Request")
                        .WithMany()
                        .HasForeignKey("RequestID");

                    b.Navigation("Master");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("PZ_18.Models.RepairPart", b =>
                {
                    b.HasOne("PZ_18.Models.Request", "Request")
                        .WithMany()
                        .HasForeignKey("RequestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Request");
                });

            modelBuilder.Entity("PZ_18.Models.Request", b =>
                {
                    b.HasOne("PZ_18.Models.User", "Client")
                        .WithMany()
                        .HasForeignKey("ClientID");

                    b.HasOne("PZ_18.Models.User", "Master")
                        .WithMany()
                        .HasForeignKey("MasterID");

                    b.HasOne("PZ_18.Models.HomeTechType", "HomeTechType")
                        .WithMany()
                        .HasForeignKey("TechTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("HomeTechType");

                    b.Navigation("Master");
                });

            modelBuilder.Entity("PZ_18.Models.User", b =>
                {
                    b.HasOne("PZ_18.Models.UserType", "UserType")
                        .WithMany()
                        .HasForeignKey("TypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserType");
                });
#pragma warning restore 612, 618
        }
    }
}
